{"formatVersion":"1.0","generatedAt":"2024-03-10T10:40:35Z","generatedBy":{"name":"Martin Johannesson"},"keywords":["apparata"],"name":"Apparata UI Packages","overview":"This collection contains Apparata's open source UI related packages.","packages":[{"keywords":[],"license":{"name":"0BSD","url":"https://raw.githubusercontent.com/apparata/AssetCatalogKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/AssetCatalogKit/master/README.md","summary":"A Swift package for generating asset catalogs.","url":"https://github.com/apparata/AssetCatalogKit.git","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"AssetCatalogKit","products":[{"name":"AssetCatalogKit","targets":["AssetCatalogKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AssetCatalogKit","name":"AssetCatalogKit"}],"toolsVersion":"5.2"}},"summary":"","version":"v1.4.0"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"AssetCatalogKit","products":[{"name":"AssetCatalogKit","targets":["AssetCatalogKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AssetCatalogKit","name":"AssetCatalogKit"}],"toolsVersion":"5.2"}},"summary":"","version":"v1.3.1"},{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"AssetCatalogKit","products":[{"name":"AssetCatalogKit","targets":["AssetCatalogKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AssetCatalogKit","name":"AssetCatalogKit"}],"toolsVersion":"5.2"}},"summary":"","version":"v1.3.0"}]},{"keywords":[],"license":{"name":"0BSD","url":"https://raw.githubusercontent.com/apparata/AttributionsUI/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/AttributionsUI/main/README.md","summary":"A Swift package for easier creation of attribution views.","url":"https://github.com/apparata/AttributionsUI.git","versions":[{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"15.0"}],"packageName":"AttributionsUI","products":[{"name":"AttributionsUI","targets":["AttributionsUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributionsUI","name":"AttributionsUI"}],"toolsVersion":"5.8"}},"summary":"","version":"v1.1.0"},{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"15.0"}],"packageName":"AttributionsUI","products":[{"name":"AttributionsUI","targets":["AttributionsUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributionsUI","name":"AttributionsUI"}],"toolsVersion":"5.8"}},"summary":"","version":"v1.0.0"},{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"15.0"}],"packageName":"AttributionsUI","products":[{"name":"AttributionsUI","targets":["AttributionsUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributionsUI","name":"AttributionsUI"}],"toolsVersion":"5.8"}},"summary":"","version":"v0.9.7"},{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"15.0"}],"packageName":"AttributionsUI","products":[{"name":"AttributionsUI","targets":["AttributionsUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributionsUI","name":"AttributionsUI"}],"toolsVersion":"5.8"}},"summary":"","version":"v0.9.6"},{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"16.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"16.0"}],"packageName":"AttributionsUI","products":[{"name":"AttributionsUI","targets":["AttributionsUI"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AttributionsUI","name":"AttributionsUI"}],"toolsVersion":"5.8"}},"summary":"","version":"v0.9.5"}]},{"keywords":["swift","swiftui"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/Bezeler/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/Bezeler/master/README.md","summary":"Bezeler is a Swift package containing SwiftUI views for low-fidelity iPhone bezels to use in mockups and such.","url":"https://github.com/apparata/Bezeler.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"14.0"}],"packageName":"Bezeler","products":[{"name":"Bezeler","targets":["Bezeler"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Bezeler","name":"Bezeler"}],"toolsVersion":"5.3"}},"summary":"","version":"0.1.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/CGMath/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/CGMath/master/README.md","summary":"Core Graphics extensions for easier math using CGPoint, CGSize, CGRect, etc","url":"https://github.com/apparata/CGMath.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"CGMath","products":[{"name":"CGMath","targets":["CGMath"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CGMath","name":"CGMath"}],"toolsVersion":"5.3"}},"summary":"","version":"v1.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"CGMath","products":[{"name":"CGMath","targets":["CGMath"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"CGMath","name":"CGMath"}],"toolsVersion":"5.3"}},"summary":"","version":"v1.0.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/Markin/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/Markin/master/README.md","summary":"Swift library for parsing a Markdown-like text format.","url":"https://github.com/apparata/Markin.git","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"}],"packageName":"Markin","products":[{"name":"Markin","targets":["Markin"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Markin","name":"Markin"}],"toolsVersion":"5.1"}},"summary":"","version":"0.7.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"}],"packageName":"Markin","products":[{"name":"Markin","targets":["Markin"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Markin","name":"Markin"}],"toolsVersion":"5.1"}},"summary":"","version":"0.7.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"},{"name":"ios","version":"13.0"}],"packageName":"Markin","products":[{"name":"Markin","targets":["Markin"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Markin","name":"Markin"}],"toolsVersion":"5.1"}},"summary":"","version":"0.6.9"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/SensibleStyling/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/SensibleStyling/main/README.md","summary":"SwiftUI styling helpers","url":"https://github.com/apparata/SensibleStyling.git","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"12.0"}],"packageName":"SensibleStyling","products":[{"name":"SensibleStyling","targets":["SensibleStyling"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SensibleStyling","name":"SensibleStyling"}],"toolsVersion":"5.5"}},"summary":"","version":"v0.1.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"12.0"}],"packageName":"SensibleStyling","products":[{"name":"SensibleStyling","targets":["SensibleStyling"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SensibleStyling","name":"SensibleStyling"}],"toolsVersion":"5.5"}},"summary":"","version":"v0.1.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/SettingsKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/SettingsKit/master/README.md","summary":"A Swift library for easily building settings forms in SwiftUI hooked up to UserDefaults.","url":"https://github.com/apparata/SettingsKit.git","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"14.0"}],"packageName":"SettingsKit","products":[{"name":"SettingsKit","targets":["SettingsKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SettingsKit","name":"SettingsKit"}],"toolsVersion":"5.4"}},"summary":"","version":"1.3.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"14.0"}],"packageName":"SettingsKit","products":[{"name":"SettingsKit","targets":["SettingsKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SettingsKit","name":"SettingsKit"}],"toolsVersion":"5.4"}},"summary":"","version":"1.2.3"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"},{"name":"macos","version":"11.0"},{"name":"tvos","version":"14.0"}],"packageName":"SettingsKit","products":[{"name":"SettingsKit","targets":["SettingsKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SettingsKit","name":"SettingsKit"}],"toolsVersion":"5.4"}},"summary":"","version":"1.2.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"SettingsKit","products":[{"name":"SettingsKit","targets":["SettingsKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SettingsKit","name":"SettingsKit"}],"toolsVersion":"5.1"}},"summary":"","version":"0.1.2"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"SettingsKit","products":[{"name":"SettingsKit","targets":["SettingsKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SettingsKit","name":"SettingsKit"}],"toolsVersion":"5.1"}},"summary":"","version":"0.1.1"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"SettingsKit","products":[{"name":"SettingsKit","targets":["SettingsKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SettingsKit","name":"SettingsKit"}],"toolsVersion":"5.1"}},"summary":"","version":"0.1.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/SwiftUIToolbox/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/SwiftUIToolbox/master/README.md","summary":"A toolbox of various SwiftUI related code.","url":"https://github.com/apparata/SwiftUIToolbox.git","versions":[{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"15.0"}],"packageName":"SwiftUIToolbox","products":[{"name":"SwiftUIToolbox","targets":["SwiftUIToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIToolbox","name":"SwiftUIToolbox"}],"toolsVersion":"5.8"}},"summary":"","version":"1.6.0"},{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"15.0"}],"packageName":"SwiftUIToolbox","products":[{"name":"SwiftUIToolbox","targets":["SwiftUIToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIToolbox","name":"SwiftUIToolbox"}],"toolsVersion":"5.8"}},"summary":"","version":"1.5.0"},{"defaultToolsVersion":"5.8","manifests":{"5.8":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"13.0"},{"name":"tvos","version":"15.0"}],"packageName":"SwiftUIToolbox","products":[{"name":"SwiftUIToolbox","targets":["SwiftUIToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIToolbox","name":"SwiftUIToolbox"}],"toolsVersion":"5.8"}},"summary":"","version":"1.4.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"12.0"},{"name":"tvos","version":"15.0"}],"packageName":"SwiftUIToolbox","products":[{"name":"SwiftUIToolbox","targets":["SwiftUIToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIToolbox","name":"SwiftUIToolbox"}],"toolsVersion":"5.5"}},"summary":"","version":"0.7.6"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"12.0"},{"name":"tvos","version":"15.0"}],"packageName":"SwiftUIToolbox","products":[{"name":"SwiftUIToolbox","targets":["SwiftUIToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIToolbox","name":"SwiftUIToolbox"}],"toolsVersion":"5.5"}},"summary":"","version":"0.7.5"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"macos","version":"12.0"},{"name":"tvos","version":"15.0"}],"packageName":"SwiftUIToolbox","products":[{"name":"SwiftUIToolbox","targets":["SwiftUIToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SwiftUIToolbox","name":"SwiftUIToolbox"}],"toolsVersion":"5.5"}},"summary":"","version":"0.7.4"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/UIKitToolbox/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/UIKitToolbox/master/README.md","summary":"Objects, extensions, etc to make working with UIKit more convenient.","url":"https://github.com/apparata/UIKitToolbox.git","versions":[{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"visionos","version":"1.0"}],"packageName":"UIKitToolbox","products":[{"name":"UIKitToolbox","targets":["UIKitToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIKitToolbox","name":"UIKitToolbox"}],"toolsVersion":"5.9"}},"summary":"","version":"1.5.5"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"visionos","version":"1.0"}],"packageName":"UIKitToolbox","products":[{"name":"UIKitToolbox","targets":["UIKitToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIKitToolbox","name":"UIKitToolbox"}],"toolsVersion":"5.9"}},"summary":"","version":"1.5.4"},{"defaultToolsVersion":"5.9","manifests":{"5.9":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"},{"name":"visionos","version":"1.0"}],"packageName":"UIKitToolbox","products":[{"name":"UIKitToolbox","targets":["UIKitToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"UIKitToolbox","name":"UIKitToolbox"}],"toolsVersion":"5.9"}},"summary":"","version":"1.5.3"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Apparata AB","organization":"Apparata AB","organizationalUnit":"DR5YAK7GKS","userID":"DR5YAK7GKS"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZHpDQ0JGK2dBd0lCQWdJUWFBS2ptNjgvd3BPdlRYWkFEVWRjTERBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXpNRGN6TURFek1qVXlOVm9YRFRJME1EY3lPVEV6TWpVeU5Gb3dnWVF4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBFVWpWWlFVczNSMHRUTVM0d0xBWURWUVFERENWVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVGd2NHRnlZWFJoSUVGQ01STXdFUVlEVlFRTERBcEVValZaUVVzM1IwdFRNUlF3RWdZRFZRUUtEQXRCY0hCaGNtRjBZU0JCUWpFTE1Ba0dBMVVFQmhNQ1ZWTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdSsxUFAyOElJOTVKcEN4bWVoaHlYNCsrQkZmbDhZWEppTGkveGxuWVdSQTl1Yk5CSmExaGdkL2xPZUhDTUdrRlVKYXN2cVhTK1p5UHViZytGSnA2TEJaem5vSWk1a1Zock5uY0djRU95amV1RTIyTi9ockhRTTVKZ0lnL3NKRkphcDFpU1RDUlgwek05TTA5c3pYWG1CWnFwSVQxb2NYMEZPYmppMlBHblZjMFFhQVFjOEVFc3MrRWZCNW1OQVZSZytaWmpQZEE0MWF1cG4ycG5ucDZSUlMyWDdDbTBUeXdNUVBDWTNJMkZ4dytzejdBd2VLaWtBR2E4NmZQTXBVaWFpdDVMS3NqTzA3alYxcklkMW5HT3l1ckE2U1JjTjFzakh4aFh5K2R3V1RPeTBVVGpPcGpUNXdjMjUveDNVQU8rTkRVRkNUSDczWWJCOE40SWc2R0hBZ01CQUFHamdnSHhNSUlCN1RBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFuK3dCV1ErYTlrQ3BJU3VTWW9Zd3lYN0tleU1FRUdDQ3NHQVFVRkJ3RUJCRFV3TXpBeEJnZ3JCZ0VGQlFjd0FZWWxhSFIwY0RvdkwyOWpjM0F1WVhCd2JHVXVZMjl0TDI5amMzQXdNeTEzZDJSeVp6TXhPVENDQVI0R0ExVWRJQVNDQVJVd2dnRVJNSUlCRFFZSktvWklodmRqWkFVQk1JSC9NSUhEQmdnckJnRUZCUWNDQWpDQnRneUJzMUpsYkdsaGJtTmxJRzl1SUhSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnWW5rZ1lXNTVJSEJoY25SNUlHRnpjM1Z0WlhNZ1lXTmpaWEIwWVc1alpTQnZaaUIwYUdVZ2RHaGxiaUJoY0hCc2FXTmhZbXhsSUhOMFlXNWtZWEprSUhSbGNtMXpJR0Z1WkNCamIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnBZMkYwYVc5dUlIQnlZV04wYVdObElITjBZWFJsYldWdWRITXVNRGNHQ0NzR0FRVUZCd0lCRml0b2RIUndjem92TDNkM2R5NWhjSEJzWlM1amIyMHZZMlZ5ZEdsbWFXTmhkR1ZoZFhSb2IzSnBkSGt2TUJZR0ExVWRKUUVCL3dRTU1Bb0dDQ3NHQVFVRkJ3TURNQjBHQTFVZERnUVdCQlF1Z1VtQjk2UFJkYjR1UEc4eTZFeURxS3VmSXpBT0JnTlZIUThCQWY4RUJBTUNCNEF3RUFZS0tvWklodmRqWkFZQkl3UUNCUUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUsrK3VJNnZ0cUNpeCtTR09lWXFWRStZNzh5RXJMdnZuNDZaNyt2bG8wZ3JRdVJuWnVFUkQydnV1SW54N2FmMVlPUXF6elgvMFhnZFBsK3FqcDZOU09QcEh6RHE5UFBiSm4vR0xHdlpLc2lNOUp3N01jamtNa0FUcEdlMnZrdy9RZnZqVFdwY0lTaGdkMlVpZUgrVjBGT3RNdEVlcGJ5d2wwQ25KeHY3YVdxS0piaFNWMC85cWxUeWhYVURqN3dUNzQ4RmhWa0hpbDBmNWNQeGx3clZFV2FQMkdacy9NeGFLNkNGaHBLVUF5OWpkRjFVQWtYYndFR2N6aUI5aXBENFE2SXlFV3NCWGNSanQyYVl0MUs0cFF5U2ZhSUpWS3JqWGtkdlREYk9QcHRIQTduR25MZDNXd0xZdjBPWENSODVlMEM3eGN5ZlRza3RIaWJmWEpkREJqWT0iCiAgXQp9..AHLXgWHKsh-8CF_SlEtJZtp4tu_WNLVOHBKfIVZcwQVv-Tkg8KWpM2B5r80khInIyBpF3QfGzFGaUGBUpHKvl6Knrmzbf1Y1_uArlIoi545lKQ7xTFCFWo8YwGNOKCc-WwhKpYbss_wPGLifxvN2ofg3OU39Bvl1Q28iEIsdugiPJvax_Xr4qjLArsTYY0sVhkikg4ZgoCT-_Z_NUKd03iGHGQpjxayOhLvTmiy_sKDUIoCkKQtqXLmV-8lD8QicmS29GtP6Cn6WxpOEHVNmgg4r8qFs7LpILda4BFE9TAc-8xyrLiSGc0K4RbIvh9JSdtUjEQCy8mMf4JaSaUANiQ"}}