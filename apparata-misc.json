{"formatVersion":"1.0","generatedAt":"2021-12-28T11:56:10Z","generatedBy":{"name":"Martin Johannesson"},"keywords":["apparata"],"name":"Apparata Miscellaneous Packages","overview":"This collection contains Apparata's open source miscellaneous packages.","packages":[{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/PDFToolbox/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/PDFToolbox/master/README.md","summary":"Helpers for working with PDF in Swift.","url":"https://github.com/apparata/PDFToolbox.git","versions":[{"defaultToolsVersion":"5.1.0","manifests":{"5.1.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"PDFToolbox","products":[{"name":"PDFToolbox","targets":["PDFToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PDFToolbox","name":"PDFToolbox"}],"toolsVersion":"5.1.0"}},"summary":"","version":"0.2.0"},{"defaultToolsVersion":"5.1.0","manifests":{"5.1.0":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"PDFToolbox","products":[{"name":"PDFToolbox","targets":["PDFToolbox"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"PDFToolbox","name":"PDFToolbox"}],"toolsVersion":"5.1.0"}},"summary":"","version":"0.1.0"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Apparata AB","organization":"Apparata AB","organizationalUnit":"DR5YAK7GKS","userID":"DR5YAK7GKS"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZHpDQ0JGK2dBd0lCQWdJUVNBTnFZTmYzTjNhYkVLby9TaXoraURBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXhNRGt5T1RFNE5UQXdNVm9YRFRJeU1Ea3lPVEU0TlRBd01Gb3dnWVF4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBFVWpWWlFVczNSMHRUTVM0d0xBWURWUVFERENWVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVGd2NHRnlZWFJoSUVGQ01STXdFUVlEVlFRTERBcEVValZaUVVzM1IwdFRNUlF3RWdZRFZRUUtEQXRCY0hCaGNtRjBZU0JCUWpFTE1Ba0dBMVVFQmhNQ1UwVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESFcwTExZSFFhaERkN1dTS0F4U05JSnZkckk2UWc5NTcrNTBNU0RCV2RscTloRzVwNzVCbE9WdCtDYlEwQXBzTy9tNlNpV2xZOWo1K3pxdVhTS3I5azFzMmtRc3Z4MW1uSjJMTFI1aTlwdHF2ZDBIVlZZeXFkUFUyUnZHcWhUa2JmMmtCbE50dGViMSt3Q29jKzZTb2UwQXFRajIxbndJZFNPR1lBRjRpdFZPUzlpYXRIWHFOaVJyM3hMN3NwakdscnVDcmtGbnZicHZTRmhTZHVMNmxTVW9WcW9NaC8xck9Lcko2S3FMNU12dFBLWVVaUCtwbm1Za2xkSlZCa1RwVlF4SFhWMVFCRzFKNVZZa3JwOHZMMkpTdlVtdFZuZUpLcU5mdzlHM2VUY2cycUxnRkR1eURBbG1hbUd6MzBoN2NLUEJhY0dYTkhSbUtoNlBieGZUMWZBZ01CQUFHamdnSHhNSUlCN1RBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFuK3dCV1ErYTlrQ3BJU3VTWW9Zd3lYN0tleU1FRUdDQ3NHQVFVRkJ3RUJCRFV3TXpBeEJnZ3JCZ0VGQlFjd0FZWWxhSFIwY0RvdkwyOWpjM0F1WVhCd2JHVXVZMjl0TDI5amMzQXdNeTEzZDJSeVp6TXhPVENDQVI0R0ExVWRJQVNDQVJVd2dnRVJNSUlCRFFZSktvWklodmRqWkFVQk1JSC9NSUhEQmdnckJnRUZCUWNDQWpDQnRneUJzMUpsYkdsaGJtTmxJRzl1SUhSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnWW5rZ1lXNTVJSEJoY25SNUlHRnpjM1Z0WlhNZ1lXTmpaWEIwWVc1alpTQnZaaUIwYUdVZ2RHaGxiaUJoY0hCc2FXTmhZbXhsSUhOMFlXNWtZWEprSUhSbGNtMXpJR0Z1WkNCamIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnBZMkYwYVc5dUlIQnlZV04wYVdObElITjBZWFJsYldWdWRITXVNRGNHQ0NzR0FRVUZCd0lCRml0b2RIUndjem92TDNkM2R5NWhjSEJzWlM1amIyMHZZMlZ5ZEdsbWFXTmhkR1ZoZFhSb2IzSnBkSGt2TUJZR0ExVWRKUUVCL3dRTU1Bb0dDQ3NHQVFVRkJ3TURNQjBHQTFVZERnUVdCQlRFZGd5c0JadUsyUnM5eHBNRloxRDQxTFowUGpBT0JnTlZIUThCQWY4RUJBTUNCNEF3RUFZS0tvWklodmRqWkFZQkl3UUNCUUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUM2Sk1hTGpESHNqZUZ2QmZJaUpQcUl5L05HSnB1L0RyOWp6UmVyZmN1c3NjeEZDYzNiSlExR3dWVEJycXhFbk9XaHFhTmorOXIwZFNLSlJlYUI1elZ6RWVWc0MxTjNwRzZ0TEVnMitlTTBZak5ncGVLdnBHQzdEQUtUOFpPYnRta29yeWZRR3ZydlE3eEU3aEtFREtVZktKcVdpcHMrMUJvWHlJWVlvbUIxZVFFMFFaVThZcUpxK2JiOTkyaVdsQyt3ZGhUL0lnaUw3UUJsR1FvWWU4Y3dYOHliczZTUTFEVVNRMkZiaW9nZ0RsSjY4RHdSeXdRMHNOQmdyQnhCblJKanRHMFpsMGtYbnRab2hENkNUK2VzTUl0WUdvb20yWncxZkp3SS9Va2tKSG9IUmtOZTBlNlh2TWRDRmNmVlNrcVMyYmVkUWUzaXZ0bFZIL1NDdmNrbz0iCiAgXQp9.ewogICJmb3JtYXRWZXJzaW9uIiA6ICIxLjAiLAogICJnZW5lcmF0ZWRBdCIgOiAiMjAyMS0xMi0yOFQxMTo1NjoxMFoiLAogICJnZW5lcmF0ZWRCeSIgOiB7CiAgICAibmFtZSIgOiAiTWFydGluIEpvaGFubmVzc29uIgogIH0sCiAgImtleXdvcmRzIiA6IFsKICAgICJhcHBhcmF0YSIKICBdLAogICJuYW1lIiA6ICJBcHBhcmF0YSBNaXNjZWxsYW5lb3VzIFBhY2thZ2VzIiwKICAib3ZlcnZpZXciIDogIlRoaXMgY29sbGVjdGlvbiBjb250YWlucyBBcHBhcmF0YSdzIG9wZW4gc291cmNlIG1pc2NlbGxhbmVvdXMgcGFja2FnZXMuIiwKICAicGFja2FnZXMiIDogWwogICAgewogICAgICAia2V5d29yZHMiIDogWwoKICAgICAgXSwKICAgICAgImxpY2Vuc2UiIDogewogICAgICAgICJuYW1lIiA6ICJNSVQiLAogICAgICAgICJ1cmwiIDogImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hcHBhcmF0YS9QREZUb29sYm94L21hc3Rlci9MSUNFTlNFIgogICAgICB9LAogICAgICAicmVhZG1lVVJMIiA6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYXBwYXJhdGEvUERGVG9vbGJveC9tYXN0ZXIvUkVBRE1FLm1kIiwKICAgICAgInN1bW1hcnkiIDogIkhlbHBlcnMgZm9yIHdvcmtpbmcgd2l0aCBQREYgaW4gU3dpZnQuIiwKICAgICAgInVybCIgOiAiaHR0cHM6Ly9naXRodWIuY29tL2FwcGFyYXRhL1BERlRvb2xib3guZ2l0IiwKICAgICAgInZlcnNpb25zIiA6IFsKICAgICAgICB7CiAgICAgICAgICAiZGVmYXVsdFRvb2xzVmVyc2lvbiIgOiAiNS4xLjAiLAogICAgICAgICAgIm1hbmlmZXN0cyIgOiB7CiAgICAgICAgICAgICI1LjEuMCIgOiB7CiAgICAgICAgICAgICAgIm1pbmltdW1QbGF0Zm9ybVZlcnNpb25zIiA6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogImlvcyIsCiAgICAgICAgICAgICAgICAgICJ2ZXJzaW9uIiA6ICIxMy4wIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIm1hY29zIiwKICAgICAgICAgICAgICAgICAgInZlcnNpb24iIDogIjEwLjE1IgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogInR2b3MiLAogICAgICAgICAgICAgICAgICAidmVyc2lvbiIgOiAiMTMuMCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICJwYWNrYWdlTmFtZSIgOiAiUERGVG9vbGJveCIsCiAgICAgICAgICAgICAgInByb2R1Y3RzIiA6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlBERlRvb2xib3giLAogICAgICAgICAgICAgICAgICAidGFyZ2V0cyIgOiBbCiAgICAgICAgICAgICAgICAgICAgIlBERlRvb2xib3giCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICJ0eXBlIiA6IHsKICAgICAgICAgICAgICAgICAgICAibGlicmFyeSIgOiBbCiAgICAgICAgICAgICAgICAgICAgICAiYXV0b21hdGljIgogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInRhcmdldHMiIDogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibW9kdWxlTmFtZSIgOiAiUERGVG9vbGJveCIsCiAgICAgICAgICAgICAgICAgICJuYW1lIiA6ICJQREZUb29sYm94IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInRvb2xzVmVyc2lvbiIgOiAiNS4xLjAiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAic3VtbWFyeSIgOiAiIiwKICAgICAgICAgICJ2ZXJzaW9uIiA6ICIwLjIuMCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJkZWZhdWx0VG9vbHNWZXJzaW9uIiA6ICI1LjEuMCIsCiAgICAgICAgICAibWFuaWZlc3RzIiA6IHsKICAgICAgICAgICAgIjUuMS4wIiA6IHsKICAgICAgICAgICAgICAibWluaW11bVBsYXRmb3JtVmVyc2lvbnMiIDogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiaW9zIiwKICAgICAgICAgICAgICAgICAgInZlcnNpb24iIDogIjEzLjAiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibmFtZSIgOiAibWFjb3MiLAogICAgICAgICAgICAgICAgICAidmVyc2lvbiIgOiAiMTAuMTUiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibmFtZSIgOiAidHZvcyIsCiAgICAgICAgICAgICAgICAgICJ2ZXJzaW9uIiA6ICIxMy4wIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInBhY2thZ2VOYW1lIiA6ICJQREZUb29sYm94IiwKICAgICAgICAgICAgICAicHJvZHVjdHMiIDogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAibmFtZSIgOiAiUERGVG9vbGJveCIsCiAgICAgICAgICAgICAgICAgICJ0YXJnZXRzIiA6IFsKICAgICAgICAgICAgICAgICAgICAiUERGVG9vbGJveCIKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgInR5cGUiIDogewogICAgICAgICAgICAgICAgICAgICJsaWJyYXJ5IiA6IFsKICAgICAgICAgICAgICAgICAgICAgICJhdXRvbWF0aWMiCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAidGFyZ2V0cyIgOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJtb2R1bGVOYW1lIiA6ICJQREZUb29sYm94IiwKICAgICAgICAgICAgICAgICAgIm5hbWUiIDogIlBERlRvb2xib3giCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAidG9vbHNWZXJzaW9uIiA6ICI1LjEuMCIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICJzdW1tYXJ5IiA6ICIiLAogICAgICAgICAgInZlcnNpb24iIDogIjAuMS4wIgogICAgICAgIH0KICAgICAgXQogICAgfQogIF0KfQ.KSPufYj8EXi5ivfx5QvaiK6aTlpFoLUIQNLzX3HWz-QvCSf6A7q0AA3GMO3s6OdRCOaRKZj7BvxjgKlw7RvtBSVmKs9co0zdEpR1F38U73o0eYCBTTfdAiUdG9kysSQRnTO2gB2cRabjvCzCGimo4RFZqp7zJruDUCdtswebD0hW7Sg6t1IAD0uhLhymLiIFJghg81INvHo26q9DmoK2c4lTt11RBOXGVeVFbPDv4P8MNX1eTFCzyoL9HWBpJ1DOYNf6VFFGMTF4REpvmNLeklN0OAl9oSXG-wL-RlSSDWYlU7V1rabla-xpM9vXGqQ8Sz2wBhPNEUS04R3mq_MgpA"}}