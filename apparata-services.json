{"formatVersion":"1.0","generatedAt":"2023-07-30T20:50:42Z","generatedBy":{"name":"Martin Johannesson"},"keywords":["apparata"],"name":"Apparata Network / Services Packages","overview":"This collection contains Apparata's open source network and services packages.","packages":[{"keywords":["ios","macos","swift","swift-package-manager"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/Approach/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/Approach/master/README.md","summary":"Approach is a small Swift framework for client/server message passing between apps over the network.","url":"https://github.com/apparata/Approach.git","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"Approach","products":[{"name":"Approach","targets":["Approach"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Approach","name":"Approach"}],"toolsVersion":"5.1"}},"summary":"","version":"0.4.8"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"Approach","products":[{"name":"Approach","targets":["Approach"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Approach","name":"Approach"}],"toolsVersion":"5.1"}},"summary":"","version":"0.4.7"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"},{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"Approach","products":[{"name":"Approach","targets":["Approach"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Approach","name":"Approach"}],"toolsVersion":"5.1"}},"summary":"","version":"0.4.6"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/AppStoreKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/AppStoreKit/master/README.md","summary":"Swift package for using the App Store Connect API.","url":"https://github.com/apparata/AppStoreKit.git","versions":[{"defaultToolsVersion":"5.2","manifests":{"5.2":{"minimumPlatformVersions":[{"name":"macos","version":"10.15"}],"packageName":"AppStoreKit","products":[{"name":"AppStoreKit","targets":["AppStoreKit"],"type":{"library":["automatic"]}},{"name":"appstore","targets":["appstore"],"type":{"executable":null}}],"targets":[{"moduleName":"AppStoreKit","name":"AppStoreKit"},{"moduleName":"appstore","name":"appstore"}],"toolsVersion":"5.2"}},"summary":"","version":"0.1.0"}]},{"keywords":[],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/apparata/MessagePackKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/MessagePackKit/master/README.md","summary":"Swift MessagePack encoder based on the \"FlightSchool\" book code.","url":"https://github.com/apparata/MessagePackKit.git","versions":[{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"MessagePackKit","products":[{"name":"MessagePackKit","targets":["MessagePackKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MessagePackKit","name":"MessagePackKit"}],"toolsVersion":"5.4"}},"summary":"","version":"1.1.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"},{"name":"macos","version":"10.15"},{"name":"tvos","version":"13.0"}],"packageName":"MessagePackKit","products":[{"name":"MessagePackKit","targets":["MessagePackKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"MessagePackKit","name":"MessagePackKit"}],"toolsVersion":"5.1"}},"summary":"","version":"1.0.0"}]},{"keywords":[],"license":{"name":"NOASSERTION","url":"https://raw.githubusercontent.com/apparata/NetAppKit/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/apparata/NetAppKit/master/README.md","summary":"Framework for making simple Express-like net apps using Swift NIO.","url":"https://github.com/apparata/NetAppKit.git","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"12.0"}],"packageName":"NetAppKit","products":[{"name":"Example","targets":["Example"],"type":{"executable":null}},{"name":"NetAppKit","targets":["NetAppKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Example","name":"Example"},{"moduleName":"NetAppKit","name":"NetAppKit"}],"toolsVersion":"5.5"}},"summary":"","version":"0.5.0"},{"defaultToolsVersion":"5.4","manifests":{"5.4":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"}],"packageName":"NetAppKit","products":[{"name":"Example","targets":["Example"],"type":{"executable":null}},{"name":"NetAppKit","targets":["NetAppKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Example","name":"Example"},{"moduleName":"NetAppKit","name":"NetAppKit"}],"toolsVersion":"5.4"}},"summary":"","version":"0.4.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"macos","version":"10.14"}],"packageName":"NetAppKit","products":[{"name":"Example","targets":["Example"],"type":{"executable":null}},{"name":"NetAppKit","targets":["NetAppKit"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Example","name":"Example"},{"moduleName":"NetAppKit","name":"NetAppKit"}],"toolsVersion":"5.3"}},"summary":"","version":"0.3.0"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Apparata AB","organization":"Apparata AB","organizationalUnit":"DR5YAK7GKS","userID":"DR5YAK7GKS"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZHpDQ0JGK2dBd0lCQWdJUWFBS2ptNjgvd3BPdlRYWkFEVWRjTERBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXpNRGN6TURFek1qVXlOVm9YRFRJME1EY3lPVEV6TWpVeU5Gb3dnWVF4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBFVWpWWlFVczNSMHRUTVM0d0xBWURWUVFERENWVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVGd2NHRnlZWFJoSUVGQ01STXdFUVlEVlFRTERBcEVValZaUVVzM1IwdFRNUlF3RWdZRFZRUUtEQXRCY0hCaGNtRjBZU0JCUWpFTE1Ba0dBMVVFQmhNQ1ZWTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdSsxUFAyOElJOTVKcEN4bWVoaHlYNCsrQkZmbDhZWEppTGkveGxuWVdSQTl1Yk5CSmExaGdkL2xPZUhDTUdrRlVKYXN2cVhTK1p5UHViZytGSnA2TEJaem5vSWk1a1Zock5uY0djRU95amV1RTIyTi9ockhRTTVKZ0lnL3NKRkphcDFpU1RDUlgwek05TTA5c3pYWG1CWnFwSVQxb2NYMEZPYmppMlBHblZjMFFhQVFjOEVFc3MrRWZCNW1OQVZSZytaWmpQZEE0MWF1cG4ycG5ucDZSUlMyWDdDbTBUeXdNUVBDWTNJMkZ4dytzejdBd2VLaWtBR2E4NmZQTXBVaWFpdDVMS3NqTzA3alYxcklkMW5HT3l1ckE2U1JjTjFzakh4aFh5K2R3V1RPeTBVVGpPcGpUNXdjMjUveDNVQU8rTkRVRkNUSDczWWJCOE40SWc2R0hBZ01CQUFHamdnSHhNSUlCN1RBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkFuK3dCV1ErYTlrQ3BJU3VTWW9Zd3lYN0tleU1FRUdDQ3NHQVFVRkJ3RUJCRFV3TXpBeEJnZ3JCZ0VGQlFjd0FZWWxhSFIwY0RvdkwyOWpjM0F1WVhCd2JHVXVZMjl0TDI5amMzQXdNeTEzZDJSeVp6TXhPVENDQVI0R0ExVWRJQVNDQVJVd2dnRVJNSUlCRFFZSktvWklodmRqWkFVQk1JSC9NSUhEQmdnckJnRUZCUWNDQWpDQnRneUJzMUpsYkdsaGJtTmxJRzl1SUhSb2FYTWdZMlZ5ZEdsbWFXTmhkR1VnWW5rZ1lXNTVJSEJoY25SNUlHRnpjM1Z0WlhNZ1lXTmpaWEIwWVc1alpTQnZaaUIwYUdVZ2RHaGxiaUJoY0hCc2FXTmhZbXhsSUhOMFlXNWtZWEprSUhSbGNtMXpJR0Z1WkNCamIyNWthWFJwYjI1eklHOW1JSFZ6WlN3Z1kyVnlkR2xtYVdOaGRHVWdjRzlzYVdONUlHRnVaQ0JqWlhKMGFXWnBZMkYwYVc5dUlIQnlZV04wYVdObElITjBZWFJsYldWdWRITXVNRGNHQ0NzR0FRVUZCd0lCRml0b2RIUndjem92TDNkM2R5NWhjSEJzWlM1amIyMHZZMlZ5ZEdsbWFXTmhkR1ZoZFhSb2IzSnBkSGt2TUJZR0ExVWRKUUVCL3dRTU1Bb0dDQ3NHQVFVRkJ3TURNQjBHQTFVZERnUVdCQlF1Z1VtQjk2UFJkYjR1UEc4eTZFeURxS3VmSXpBT0JnTlZIUThCQWY4RUJBTUNCNEF3RUFZS0tvWklodmRqWkFZQkl3UUNCUUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUsrK3VJNnZ0cUNpeCtTR09lWXFWRStZNzh5RXJMdnZuNDZaNyt2bG8wZ3JRdVJuWnVFUkQydnV1SW54N2FmMVlPUXF6elgvMFhnZFBsK3FqcDZOU09QcEh6RHE5UFBiSm4vR0xHdlpLc2lNOUp3N01jamtNa0FUcEdlMnZrdy9RZnZqVFdwY0lTaGdkMlVpZUgrVjBGT3RNdEVlcGJ5d2wwQ25KeHY3YVdxS0piaFNWMC85cWxUeWhYVURqN3dUNzQ4RmhWa0hpbDBmNWNQeGx3clZFV2FQMkdacy9NeGFLNkNGaHBLVUF5OWpkRjFVQWtYYndFR2N6aUI5aXBENFE2SXlFV3NCWGNSanQyYVl0MUs0cFF5U2ZhSUpWS3JqWGtkdlREYk9QcHRIQTduR25MZDNXd0xZdjBPWENSODVlMEM3eGN5ZlRza3RIaWJmWEpkREJqWT0iCiAgXQp9..H8Ct1QtteRvF1KP_Vn9q_G8y3TvaY2_b8yv0UMCF1ox2UCXkownFBASOpRrApVcOzB05rb6NPpTGIxtpFfZMKG4cKWQPeEyVbmI_FNaaMnz3jlYIoYMGOvBHeCnr3Z3bPFZpQyyRV6QUjebfFevDKV_LoSkd3AiiN4SPBfCEltW4e79iMiTwm0RrPsWSJ4xkN7D60e8mw0vOi0rJs21gBEFizbtt6aO11Aw2JIvCLJyjYcHLY2-7m34ZRcs23AhKa_bu4eX_bfn50H1DaChI7js6VPGRBz1euNZLKbZEk-STvemRbKaT6BuJQ81JBTawNlxAT6m00ODRlWsXGjRgYQ"}}